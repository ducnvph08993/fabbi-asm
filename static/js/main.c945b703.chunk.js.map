{"version":3,"sources":["components/FirstStep/index.jsx","components/SecondStep/index.jsx","components/OrderDetail/index.jsx","components/ThirdStep/index.jsx","components/FourthStep/index.jsx","components/Steps/index.jsx","App.js","serviceWorker.js","index.js"],"names":["Option","Select","layout","labelCol","span","wrapperCol","tailLayout","offset","FirstStep","props","meals","steps","currentSteps","setSteps","newObject","Form","useForm","form","name","onFinish","values","peoples","meal","localStorage","setItem","JSON","stringify","Item","label","initialValue","rules","required","type","min","max","placeholder","allowClear","map","value","key","id","className","length","htmlType","SecondStep","dishes","newRes","forEach","dish","availableMeals","includes","restaurant","push","res","index","style","margin","onClick","s4","Math","floor","random","toString","substring","OrderDetail","newDish","orderItems","setOrderItems","useState","dishValue","setDishValue","numOfDish","numOfDishValue","setNumOfDishValue","nameDish","nameNo","display","width","message","marginLeft","float","onChange","check","item","error","newOrderItems","splice","dishNew","handleChangeDish","handleChangeNumber","generateId","ThirdStep","dataLocal","getItem","orderDetail","parse","isAdd","setIsAdd","showOrder","add","PlusCircleOutlined","marginRight","total","FourthStep","success","Step","Steps","Menu","title","content","current","App","data","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.c945b703.chunk.js","sourcesContent":["import React from 'react';\r\n// import PropTypes from 'prop-types';\r\n\r\nimport { Form, Select, Button, InputNumber } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 8 },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 7,\r\n  },\r\n};\r\n\r\nconst FirstStep = (props) => {\r\n  const { meals,steps,currentSteps,setSteps, newObject} = props;\r\n\r\n  const [form] = Form.useForm();\r\n  \r\n  const onFinish = values => {\r\n    newObject.peoples = values.peoples;\r\n    newObject.meal = values.meal;\r\n    localStorage.setItem('ObjectLocal', JSON.stringify(newObject));\r\n    const current = currentSteps + 1;\r\n    setSteps(current);\r\n  };\r\n\r\n    return (\r\n      <Form {...layout} form={form} name=\"control-hooks\" onFinish={onFinish} >\r\n        <Form.Item \r\n        name=\"peoples\" \r\n        label=\"Number of peoples\" \r\n        initialValue={newObject.peoples}\r\n        rules={[{required:true, type: 'number', min: 1, max: 10 }]} >\r\n          <InputNumber />\r\n        </Form.Item>\r\n        <Form.Item name=\"meal\" label=\"Meals\" rules={[{ required: true }]}   initialValue={newObject.meal}>\r\n          <Select\r\n            placeholder=\"Select a option and change input text above\"\r\n            allowClear\r\n          >\r\n            {\r\n              meals.map((meal) => (\r\n                <Option value={meal.label} key={meal.id}>{meal.label}</Option>\r\n              ))\r\n            }\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item {...tailLayout}>\r\n          <div className=\"steps-action\">\r\n            {currentSteps < steps.length - 1 && (\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Next\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Form.Item>\r\n      </Form>\r\n  );\r\n};\r\n\r\nFirstStep.propTypes = {\r\n\r\n}\r\n\r\nexport default FirstStep\r\n","import React from 'react'\r\n\r\nimport { Form, Select, Button } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 8 },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 8,\r\n  },\r\n};\r\n\r\nconst SecondStep = (props) => {\r\n  const { dishes,steps,currentSteps,setSteps,newObject } = props;\r\n  const [form] = Form.useForm();\r\n  const newRes = [];\r\n  \r\n  dishes.forEach(dish => {\r\n    if(dish.availableMeals.includes(newObject.meal) && !newRes.includes(dish.restaurant))\r\n    newRes.push(dish.restaurant);\r\n  });\r\n\r\n  const prev = () => {\r\n    const current = currentSteps - 1;\r\n    setSteps(current);\r\n  }\r\n   \r\n  const onFinish = values => {\r\n    newObject.restaurant = values.restaurant;\r\n    localStorage.setItem('ObjectLocal', JSON.stringify(newObject));\r\n    const current = currentSteps + 1;\r\n    setSteps(current);\r\n  };\r\n\r\n    return (\r\n        <Form {...layout} form={form} name=\"control-hooks\" onFinish={onFinish}>\r\n          <Form.Item name=\"restaurant\" label=\"Restaurant\" rules={[{ required: true }]} initialValue={newObject.restaurant}>\r\n            <Select\r\n              placeholder=\"Select a option and change input text above\"\r\n              allowClear\r\n            >\r\n              {\r\n                newRes.map((res,index) => (\r\n                <Option key={index} value={res}>{res}</Option>\r\n                ))\r\n              }\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item {...tailLayout}>\r\n            <div className=\"steps-action\">\r\n              {currentSteps > 0 && (\r\n                <Button style={{ margin: '0 8px' }} onClick={prev}>\r\n                  Previous\r\n                </Button>\r\n              )}\r\n              {currentSteps < steps.length - 1 && (\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  Next\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </Form.Item>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default SecondStep;\r\n\r\n","import React, { useState } from 'react'\r\nimport { Form, Select, InputNumber, message} from 'antd';\r\n\r\nconst s4 = () => {\r\n  return Math.floor((1+ Math.random()) * 0x10000).toString(16).substring(1);\r\n}\r\n\r\nconst generateId = () => {\r\n  return s4() + s4() + '-' + s4() + '-' + s4() + s4() + '-' + s4();\r\n}\r\n\r\nconst OrderDetail = (props) => {\r\n    const { newDish, orderItems,dish, setOrderItems } = props;\r\n    const [dishValue, setDishValue] = useState(dish.name);\r\n    const [numOfDishValue, setNumOfDishValue] = useState(dish.numOfDish);\r\n    const nameDish = 'dish' + dish.id;\r\n    const nameNo = 'no' + dish.id;\r\n  \r\n    const handleChangeDish = (value) => {\r\n      var check = false;\r\n      orderItems.forEach(item => {\r\n        if(item.name === value){\r\n          check = true; \r\n          return;\r\n        }\r\n      });\r\n      if(check===false){\r\n        dish.name = value;\r\n        setDishValue(value);\r\n      }else{\r\n        message.error(\"You can't select the same dish twice, rather add more servings.\");\r\n        const nameDish = dish.name === '' ? '' : dish.name;\r\n        const newOrderItems = orderItems.map((item) => item);\r\n        newOrderItems.splice(newOrderItems.length - 1, 1);\r\n        const dishNew = { id: generateId() , name: nameDish, numOfDish: dish.numOfDish };\r\n        newOrderItems.push(dishNew);\r\n        setOrderItems(newOrderItems);\r\n      }\r\n    }\r\n  \r\n    const handleChangeNumber = (value) => {\r\n      dish.numOfDish = value;\r\n      setNumOfDishValue(value);\r\n    }\r\n  \r\n    return (\r\n        <div style={{display: \"flex\"}}>\r\n          <div className=\"fInput\"  style={{ width: \"60%\"}}>\r\n            <Form.Item \r\n              label=\"Please Select a dish\"\r\n              initialValue={dishValue} \r\n              name= {nameDish}\r\n              rules={[{ \r\n                required: true,\r\n                message: 'Please Select a meal' \r\n              }]}\r\n              style={{marginLeft:\"60%\"}}\r\n            >\r\n              <Select \r\n              style={{width:\"80%\", float:\"left\"}}\r\n              onChange={(value) => handleChangeDish(value)}\r\n              >\r\n                {\r\n                  newDish.map((dish, index) =>(\r\n                    <Select.Option value={dish} key={index}>{dish}</Select.Option>\r\n                  ))\r\n                }\r\n              </Select>\r\n            </Form.Item>\r\n          </div>\r\n          <div className=\"sInput\"  style={{ width: \"40%\"}}>\r\n            <Form.Item\r\n              label=\"Please select no of servings\"\r\n              initialValue={numOfDishValue}\r\n              name={nameNo}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please Enter Number of people',\r\n                },\r\n              ]}\r\n              >\r\n              <InputNumber \r\n                type=\"number\" \r\n                style={{float:\"left\"}} \r\n                onChange={(value) => handleChangeNumber(value)}\r\n              />\r\n            </Form.Item>\r\n          </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderDetail;\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, message } from \"antd\";\r\nimport './ThirdStep.scss';\r\nimport OrderDetail from '../OrderDetail';\r\nimport { PlusCircleOutlined } from '@ant-design/icons';\r\n\r\nconst s4 = () => {\r\n  return Math.floor((1+ Math.random()) * 0x10000).toString(16).substring(1);\r\n}\r\n\r\nconst generateId = () => {\r\n  return s4() + s4() + '-' + s4() + '-' + s4() + s4() + '-' + s4()\r\n}\r\n\r\nconst ThirdStep = (props) => {\r\n  const { dishes,steps,currentSteps,setSteps } = props;\r\n  const dataLocal = localStorage.getItem('ObjectLocal');\r\n  const orderDetail = dataLocal !== null ? JSON.parse(dataLocal) : null;\r\n  const [orderItems, setOrderItems] = useState(orderDetail.dishes);\r\n  const [isAdd, setIsAdd] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const newDish = [];\r\n  \r\n  dishes.forEach(dish => {\r\n    if(dish.availableMeals.includes(orderDetail.meal) && dish.restaurant.includes(orderDetail.restaurant) && !newDish.includes(dish.name))\r\n    newDish.push(dish.name);\r\n  });\r\n\r\n\r\n  const prev = () => {\r\n    const current = currentSteps - 1;\r\n    setSteps(current);\r\n  }\r\n\r\n  const onFinish = () => {\r\n    var error = false;\r\n    var total = 0;\r\n    orderItems.forEach(item => {\r\n      total += +item.numOfDish;\r\n      if(item.name === '' || item.name === null){ error = true;}\r\n    });\r\n    if(error){\r\n      message.error('Please Select a Dish. Not empty!');\r\n    }else if(total > 10){\r\n      message.error('The total number of dishes should be maximum of 10 is allowed')\r\n    }else if(total < orderDetail.peoples){\r\n      message.error('The total number of dishes should be greater or equal to the number of people selected in the first step ( >='+orderDetail.peoples+' )')\r\n    }else{\r\n      orderDetail.dishes=orderItems;\r\n      localStorage.setItem('ObjectLocal', JSON.stringify(orderDetail));\r\n      const current = currentSteps + 1;\r\n      setSteps(current);\r\n    }    \r\n  };;\r\n\r\n  const showOrder = () => {\r\n    if(orderItems.length === 0){\r\n      const dishNew = { id: generateId(), name: '', numOfDish: 1 };\r\n      orderItems.push(dishNew);\r\n      setOrderItems(orderItems);\r\n      return <OrderDetail orderItems={orderItems} newDish={newDish} dish={dishNew} setOrderItems={setOrderItems}/>;\r\n    }else{\r\n      return(\r\n        orderItems.map((dish) => (\r\n          <div key={dish.id}>\r\n            <OrderDetail key={dish.id} orderItems={orderItems} newDish={newDish} dish={dish} setOrderItems={setOrderItems}/><br/>\r\n          </div>\r\n        ))\r\n      );\r\n    }\r\n  }\r\n\r\n  const handleAddClick = () => {\r\n    var error = false;\r\n    orderItems.forEach(item => {\r\n      if(item.name === '' || item.name === null){ error = true; return;}\r\n    });\r\n    if(error){\r\n      message.error('Please Select a Dish. Not empty!');\r\n    }else{\r\n      if(newDish.length === orderItems.length){\r\n        message.error('The restaurant has only '+ newDish.length +' suitable dishes for you to choose from');\r\n      }else{\r\n        setIsAdd(!isAdd);\r\n      }\r\n    }\r\n  }\r\n\r\n  const add = () => {\r\n    const dishNew = { id: generateId(), name: '', numOfDish: 1 };\r\n    orderItems.push(dishNew);\r\n    setOrderItems(orderItems);\r\n    setIsAdd(false);\r\n    return <OrderDetail orderItems={orderItems} newDish={newDish} dish={dishNew} setOrderItems={setOrderItems}/>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Form\r\n      form={form}\r\n      layout=\"vertical\"\r\n    >\r\n    <div className=\"main-order\">\r\n      {showOrder()}\r\n      {\r\n      (isAdd) && add()\r\n      }\r\n      <br/>   \r\n      <PlusCircleOutlined onClick={handleAddClick} />\r\n    </div>\r\n    <div \r\n      className=\"steps-action\"\r\n      style={{ display: \"flex\"}}\r\n    >\r\n      <div className=\"button\">\r\n        {currentSteps > 0 && (\r\n        <Button style={{ marginRight: '8px' }} onClick={prev}>\r\n          Previous\r\n        </Button>\r\n        )}\r\n        {currentSteps < steps.length - 1 && (\r\n          <Button type=\"primary\" htmlType=\"submit\" onClick={onFinish}>\r\n            Next\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n    </Form>\r\n   \r\n  </>\r\n  )\r\n}\r\n\r\nexport default ThirdStep;\r\n","import { Button, message } from 'antd';\r\nimport React from 'react'\r\nimport './FourthStep.scss';\r\n\r\nconst FourthStep = (props) => {\r\n    const { steps,currentSteps,setSteps } = props;\r\n    const dataLocal = localStorage.getItem('ObjectLocal');\r\n    const orderDetail = dataLocal !== null ? JSON.parse(dataLocal) : null;  \r\n\r\n    const prev = () => {\r\n      const current = currentSteps - 1;\r\n      setSteps(current);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"left col-6\">\r\n            <h6>Meal:</h6>\r\n            <h6>No of People:</h6>\r\n            <h6>Restaurant:</h6>\r\n            <h6>Dishes:</h6>\r\n          </div>\r\n          <div className=\"right col-6\">\r\n            <h6>{orderDetail.meal}</h6>\r\n            <h6>{orderDetail.peoples}</h6>\r\n            <h6>{orderDetail.restaurant}</h6>\r\n            <div className=\"bd\">  \r\n              {\r\n                orderDetail.dishes.map((dish) => (\r\n                  <h6 key={dish.id}>{dish.name}-{dish.numOfDish}</h6>\r\n                ))\r\n              }\r\n            </div>\r\n          </div>\r\n          <div className=\"steps-action\" >       \r\n            {currentSteps > 0 && (\r\n              <Button style={{ margin: '0 8px' }} onClick={prev}>\r\n                Previous\r\n              </Button>\r\n            )}\r\n             {currentSteps === steps.length - 1 && (\r\n              <Button type=\"primary\" onClick={() => message.success('Thank you for using our service!')}>\r\n                Done\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default FourthStep;\r\n","import React, { useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Steps} from 'antd';\r\nimport FirstStep from '../FirstStep';\r\nimport SecondStep from '../SecondStep';\r\nimport ThirdStep from '../ThirdStep';\r\nimport FourthStep from '../FourthStep';\r\nimport './Steps.scss';\r\n\r\nconst { Step } = Steps;\r\n\r\nconst objectLocal = {meal : \"\", restaurant: \"\",peoples: 1, dishes: []};\r\nlocalStorage.setItem('ObjectLocal', JSON.stringify(objectLocal));\r\n\r\nconst newObject = JSON.parse(localStorage.getItem('ObjectLocal'));\r\n\r\nconst Menu = (props) => {\r\n  const {dishes} = props;\r\n  const [currentSteps, setSteps] = useState(0);\r\n\r\n  const meals = [\r\n    {\r\n      id:1,\r\n      label: 'breakfast',\r\n    },\r\n    {\r\n      id: 2,\r\n      label: 'lunch',\r\n    },\r\n    {\r\n      id: 3,\r\n      label: 'dinner',\r\n    }\r\n  ];\r\n\r\n  const steps = [\r\n    {\r\n      title: 'First',\r\n      content: (steps) => <FirstStep dishes={dishes} steps={steps} meals={meals} currentSteps={currentSteps} setSteps={setSteps} newObject={newObject} />,\r\n    },\r\n    {\r\n      title: 'Second',\r\n      content: (steps) => <SecondStep dishes={dishes} steps={steps} currentSteps={currentSteps} setSteps={setSteps} newObject={newObject} />,\r\n    },\r\n    {\r\n      title: 'Third',\r\n      content: (steps) => <ThirdStep dishes={dishes} steps={steps} currentSteps={currentSteps} setSteps={setSteps} />,\r\n    },\r\n    {\r\n      title: 'Last',\r\n      content: (steps) => <FourthStep dishes={dishes} steps={steps} currentSteps={currentSteps} setSteps={setSteps} />,\r\n    },\r\n  ];\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Steps current={currentSteps}>\r\n          {steps.map(item => (\r\n            <Step key={item.title} title={item.title} />\r\n          ))}\r\n        </Steps>\r\n        <div className=\"steps-content\">{steps[currentSteps].content(steps)}</div>\r\n      </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Menu;\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport Menu from './components/Steps';\nimport data from './data/dishes.json';\n\nfunction App() {\n  const [dishes] = useState(data.dishes);\n\n  return (\n    <div className=\"App\">\n      <Menu dishes={dishes} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}